SELECT USER
FROM DUAL;
--==>> SCOTT

-- FINAL PROJECT 일부 테이블 샘플링
-- 테이블 생성(참여 확인번호, 주간업무보고,주간업무보고 미작성알림,주간업무보고 미작성)
--  테이블 생성 : 참여확인번호
CREATE TABLE PART_CHECK
( PART_CHECK_NO NUMBER
, P_CHECK_DATE  DATE
, CONSTRAINT PART_CHECK_PK PRIMARY KEY(PART_CHECK_NO)
);
--==>> Table PART_CHECK이(가) 생성되었습니다.

-- 테이블 생성 : 주간업무보고
CREATE TABLE WEEKLY_REPORT
( WWR_NO            NUMBER
, WWR_FILE_ROUTE    VARCHAR2(100)
, WWR_NAME          VARCHAR2(100)
, WWR_CONTENTS      VARCHAR2(4000)
, WWR_DATE          DATE
, PART_CHECK_NO     NUMBER
, CONSTRAINT WEEKLY_REPORT_PK PRIMARY KEY(WWR_NO)
, CONSTRAINT WEEKLY_REPORT_FK FOREIGN KEY(PART_CHECK_NO)
                              REFERENCES PART_CHECK(PART_CHECK_NO)
);
--==>> Table WEEKLY_REPORT이(가) 생성되었습니다.

-- 테이블 생성 : 주간업무보고 미작성
CREATE TABLE WEEKREPORT_UNWRT
( WEEKREPORT_UNWRT_NO   NUMBER
, CREATE_DATE           DATE
, CONSTRAINT WEEKREPORT_UNWRT_PK PRIMARY KEY(WEEKREPORT_UNWRT_NO)
);
--==>> Table WEEKREPORT_UNWRT이(가) 생성되었습니다.

-- 테이블 생성 : 주간업무보고 미작성알림
CREATE TABLE WEEKREPORT_NTF
( WEEKREPORT_NTF_NO     NUMBER
, READ_DATE             DATE
, PART_CHECK_NO         NUMBER
, WEEKREPORT_UNWRT_NO   NUMBER
, CONSTRAINT WEEKREPORT_NTF_PK PRIMARY KEY(WEEKREPORT_NTF_NO)
, CONSTRAINT PART_CHECK_NO FOREIGN KEY(PART_CHECK_NO)
                           REFERENCES PART_CHECK(PART_CHECK_NO)
, CONSTRAINT WEEKREPORT_UNWRT_NO FOREIGN KEY(WEEKREPORT_UNWRT_NO)
                                 REFERENCES WEEKREPORT_UNWRT(WEEKREPORT_UNWRT_NO)
);

-- 데이터 입력
-- 참여확인번호테이블 데이터 입력
INSERT INTO PART_CHECK (PART_CHECK_NO, P_CHECK_DATE) VALUES (1, SYSDATE);
INSERT INTO PART_CHECK (PART_CHECK_NO, P_CHECK_DATE) VALUES (2, SYSDATE);
INSERT INTO PART_CHECK (PART_CHECK_NO, P_CHECK_DATE) VALUES (3, SYSDATE);
INSERT INTO PART_CHECK (PART_CHECK_NO, P_CHECK_DATE) VALUES (4, SYSDATE);

-- 주간업무보고 데이터 입력
INSERT INTO WEEKLY_REPORT (WWR_NO, WWR_NAME, WWR_CONTENTS, WWR_DATE, PART_CHECK_NO)
VALUES(WEEKLY_REPORT_SEQ.nextval, '주간업무보고1', '내용임', SYSDATE, 1);

-- 시퀀스 생성
-- 주간업무보고 시퀀스
CREATE SEQUENCE WEEKLY_REPORT_SEQ
NOCACHE;

-- 주간업무보고 미작성 시퀀스
CREATE SEQUENCE WEEKREPORT_UNWRT_SEQ
NOCACHE;

-- 주간업무보고 알림 시퀀스
CREATE SEQUENCE WEEKREPORT_NTF_SEQ
NOCACHE;
--==>> Sequence WEEKREPORT_UNWRT_SEQ이(가) 생성되었습니다.

-- 프로시저 구성
-- 주간업무보고 미작성 입력 프로시저
CREATE OR REPLACE PROCEDURE PRC_WEEKREPORT_UNWRT
IS  
BEGIN
    
    -- 주간 업무 보고 미작성 데이터 입력
    INSERT INTO WEEKREPORT_UNWRT
    VALUES(WEEKREPORT_UNWRT_SEQ.NEXTVAL, TRUNC(SYSDATE));
    
    --JOIN 활용하여 데이터 입력
    INSERT INTO WEEKREPORT_NTF (WEEKREPORT_NTF_NO, READ_DATE, PART_CHECK_NO, WEEKREPORT_UNWRT_NO)
    SELECT WEEKREPORT_NTF_SEQ.NEXTVAL, SYSDATE, P.PART_CHECK_NO, U.WEEKREPORT_UNWRT_NO
    FROM PART_CHECK P
    LEFT JOIN WEEKLY_REPORT W ON P.PART_CHECK_NO = W.PART_CHECK_NO
    LEFT JOIN WEEKREPORT_UNWRT U ON U.CREATE_DATE = TRUNC(SYSDATE)
    WHERE (W.WWR_DATE < SYSDATE - 7 OR W.WWR_DATE IS NULL);

    COMMIT;
    
    EXCEPTION
        WHEN OTHERS THEN ROLLBACK;
END;
--==>> Procedure PRC_WEEKREPORT_UNWRT이(가) 컴파일되었습니다.

-- 자동화 업무 수행
--① 프로그램 등록
BEGIN
    DBMS_SCHEDULER.CREATE_PROGRAM
    ( PROGRAM_NAME => 'WEEKREPORT_UNWRT_PRG'
    , PROGRAM_ACTION => 'PRC_WEEKREPORT_UNWRT'
    , PROGRAM_TYPE => 'STORED_PROCEDURE'
    , COMMENTS => 'WEEKREPORT_UNWRT PROGRAM'
    , ENABLED => TRUE
    );
END;
--==>> PL/SQL 프로시저가 성공적으로 완료되었습니다.

--② 스케줄러 등록
BEGIN
    DBMS_SCHEDULER.CREATE_SCHEDULE
    ( SCHEDULE_NAME => 'SCHEDULE_7_DAY'
    , START_DATE => TO_DATE('2024-02-16 09:00:00', 'YYYY-MM-DD HH24:MI:SS')
    , END_DATE => NULL
    , REPEAT_INTERVAL => 'FREQ=WEEKLY; BYDAY=FRI; BYHOUR=12; BYMINUTE=00; BYSECOND=01;'
    -- 『REPEAT_INTERVAL』 : 스케줄러의 작동 주기
    --                       FREQ를 분단위(FREQ='MINUTELY')로 하고, 30분 마다(INTERVAL=30) 돌게하는 식
    --                       (※ FREQ : Frequency, 빈도)
    , COMMENTS => 'Every Friday starting from February 16, 2024;'
    -- 『COMMENTS』 : 코멘트, 부가 설명
    );
END;

--==>> PL/SQL 프로시저가 성공적으로 완료되었습니다.

--③ 잡 등록
BEGIN
    DBMS_SCHEDULER.CREATE_JOB
    ( JOB_NAME => 'WEEKREPORT_UNWRT_JOB'
    , PROGRAM_NAME => 'WEEKREPORT_UNWRT_PRG'
    , SCHEDULE_NAME => 'SCHEDULE_7_DAY'
    , ENABLED => TRUE
    );
END;
--==>> PL/SQL 프로시저가 성공적으로 완료되었습니다.

-- 테스트 및 확인
SELECT *
FROM WEEKREPORT_UNWRT;

SELECT *
FROM WEEKREPORT_NTF;

--○ 삭제 구문
-- 테이블 삭제
DROP TABLE PART_CHECK PURGE;
DROP TABLE WEEKLY_REPORT PURGE;
DROP TABLE WEEKREPORT_UNWRT PURGE;
DROP TABLE WEEKREPORT_NTF PURGE;

-- 프로시저 삭제
DROP PROCEDURE PRC_WEEKREPORT_UNWRT;

--※ 삭제 처리 구문(프로그램 삭제)
EXECUTE DBMS_SCHEDULER.DROP_PROGRAM('WEEKREPORT_UNWRT_PRG', FALSE);
--※ 삭제 처리 구문(스케줄 삭제)
EXECUTE DBMS_SCHEDULER.DROP_SCHEDULE('SCHEDULE_7_DAY', FALSE);
--※ 삭제 처리 구문(잡 삭제)
EXECUTE DBMS_SCHEDULER.DROP_JOB('WEEKREPORT_UNWRT_JOB', FALSE);
